//הגדרה/הכרזה של פונקציה
function sayHello(x) {
    console.log("hello " + x);
}

//קריאה/הפעלה של הפונקציה
sayHello("david")

//בעצם בלי הקריאה לפונקציה הפונקציה לא תפעל
sayHello

//חייבים לשים סוגרים כדי להפעיל אותה
//sayHello(x)

//מה שנמצא בתוך הסוגריים נקרא פרמטר/ארגומנט

//פרמטר
// הפרמטר זה כשהפונקציה יכולה לקבל מבחוץ מהמשתמש נתונים
// הוא משתנה שהמשתמש מביא מבחוץ נתוניםxבעצם ה
//sayHello("david")
//davidהשתנה ל xה
//לדוגמא אני מבקש מהמשתמש לשלוח את השם שלו והפונקציה תיקח את הנתונים שהמשתמש שולח ותישתמש בהם בפונקציה

//ארגומנט
//זה הנתונים האמיתיים שהמשתמש ישלח לי מבחוץ
//זה הארגומט זה הנתונים מבחוץ david בדוגמא שלנו 
//פרמטר = ארגומנט
//  david = name

//בעצם הנתונים שהמתכנת מכניסים בפונקציה נקרא פרמטר
//והנתונים שהמשתמש נותן נקרא ארגומט

//אין הגבלה לכמות פרמטרים

//console.log("****************");

/*דוגמא לחיים האישיים:
למה ההסבר דומה?
לבנקאי שמקבל כספים מלקוחות
מבחינת הלקוח הכסף שהוא מעביר לבנקאי יכול להיות כסף להמון מטרות בסכומים שונים: הפקדה לפיקדון,עו"ש,העברה
הכסף מועבר מהלקוח לבנקאי כארגומנט הלקוח מעביר מבחוץ מחוץ למערכת הבנקאית לבנקאי מבפנים

מבחינת הבנקאי הסכום שהלקוח מעביר לא תמיד משנה אלא הוא תמיד מתייחס אליו כפרמטר משימה מוגדרת מראש ע״י המערכת שהוא אמור לטפל בה והפעולות לגביה במסגרת טיפול הבנקאי קבועות וידועות לבנקאי
הוא יודע מה לעשות עם הכסף לפי הדרישה של הבנק לטיפול בכל פעולת לקוח: הפקדה לפיקדון,עו"ש וכו
כל פעולה כזאת תהיה פונקציה שהבנקאי יודע לבצע*/

/*פרמטר וארגומנט זה אותו דבר
ההבדל ביניהם הוא מאיזה פוזיציה מנסים להגדיר אותם

ובהמשך לדוגמא הקודמת:

ה5000 ש״ח שהלקוח מפקיד מבחינתו הם נקראים משכורת ומבחינת הבנקאי הם נקראים "הפקדה לעו"ש ללקוח" פעולה בנקאית*/

//מאפשר לנו להוציא את הפונקציה החוצה return 
function sum(num1, num2) {
    console.log(num1 + num2);
    //התוצאה לא תצא החוצה return בגלל שאין פה
    //היא נשארת בפונקציה

}

let numx = sum(5, 8)
//פה עשינו את כל פעולות החיבור אבל ברגע שנדפיס בצורה הבאה
//undefined נקבל
//בגלל שלא עשינו return
console.log(numx);
//רק אז הפונקציה יכולה לקבל return ברגע שעושים 
//נתונים מבחוץ
//בעצם דוחף את התוצאה החוצה returnה

//זה כמו מפעל שמייצר מותר ולא הוציא אותו מחוץ למפעל

function sum(num1, num2) {
    return num1 + num2;
}
let num3 = sum(5, 8);
console.log(num3);

let num4 = sum(8, 3);
console.log(num4);

//ביקשתי שיחזיר לי את החיבור של return בעצם
//num1 + num2
//המשתנה החדש שווה לתוצאה

//אופציה שנייה
function sum(num4, num5) {
    let result = num4 + num5;
    return result;
}

let num = sum(10, 10);
console.log(num);

//ניצור פונקציה שנבקש מהמשתמש שם + שם משפחה
//ולרשום לו בחזרה היי שלום שם + משפחה
function getFullName(firstName, lastName) {
    let fullName = firstName + " " + lastName;
    return fullName;
}
let result = getFullName("samuel", "frau")
console.log(result);


//במקום ליצור משתנה חדש ולהדפיס את המשתנה הזה שיצרתי
//יש לי אופציה נוספת שהיא להדפיס ישירות את הפונקציה ולתת בסוגריים את הערכים שאני רוצה

//אופ שנייה
/*function getFullName(firstName, lastName) {
    let fullName = firstName + " " + lastName;
    return fullName;
} */
console.log(getFullName("samuel", "frau"));

//ההבדל ביניהם זה שהמשתנה אני יכול לקרוא לו עוד  פעם לעומת זאת האופ 2 אני לא יוכל לקרוא לה שוב


console.log("****** תנאים ****");
//בתנאים יש לנו כמה אופציות
// if 
//else if
//else

/* if(age >= 70) {
    console.log("אתה אזרח ותיק ופטור מתור");
 }else if(age >= 18) {
  console.log("תמתין בסבלנות")
 }else{
 console.log("אינך בגיל")
 } */


/* if(age >= 70) {
    console.log("אתה אזרח ותיק ופטור מתור");
    התנאי הוא אם הגיל גדול או שווה ל70 זה ידפיס לו פטור מתור ויפסיק להריץ את הפונקציה
    גם אם התנאי השני הוא גם גדול או שווה ל70
    אם לא זה עובר לתנאי הבא
     }else if(age >= 18) {
  console.log("תמתין בסבלנות")
  התנאי הוא אם לא לגבי התנאי הראשון והגיל גדול או שווה ל18 תדפיס תמתין בסבלנות ופה נפסקת הפונקציה אם הגיל לא עומד בתנאי הזה
  תדפיס לו אינך בגיל
  }else{
    console.log("אינך בגיל")
    בעצם כל תשובה אחרת תדפיס לי ככה
 }
}*/

//falsy value להלן ערכים שאוטומטית יזוהו כ 
//שיקרי או לא נכון או שלילי
//false
//0 (הספרה 0)
//-0 (המספר השלילי 0)
//מחרוזת ריקה ״״
//null
//undefined
//NaN (not a number)

//לדוגמא
/*if(0) {
console.log("truthy")
}else {
console.log("falsy")
}
הוא תמיד ידפיס לי console.log("falsy")
כי זה תמיד יהיה שלילי הוא מכיר אותו כשלילי
הוא אף פעם לא ידפיס לי את ההדפסה של התנאי  הראשון
*/

// true/תמיד חייב להיות חיובי  if התנאי 

//truthy value להלן ערכים שאוטומטית יזוהו כ 
//(חיובי או שלילי) כל מספר שהוא לא 0
//כל מחרוזת שאינה ריקה ״סטרינג״
//אובייקטים כולל מערכים
//פונקציות

//לדוגמא
let x;
if (x != undefined) {
    console.log("hello");

} else {
    console.log("by");

}
//אפשר לרשום את אותו דבר בפחות קוד
/* let x;
if (x) {
    console.log("hello");
    
    }else {
        console.log("by");
}
*/

//אם אשנה את הערך  שלו אני אקבל תשובה חיובית כי כרגע כשאני לא מגדיר כלום זה יהיה 
//undefined

let y = 3;
if (y) {
    console.log("hello");

} else {
    console.log("by");

}
/*
let y = 3;
if (x != undefined) {
    console.log("hello");

} else {
    console.log("by");

} 
    */